#ifndef CHESSBOT_UTILITIES_H
#define CHESSBOT_UTILITIES_H

#include "../ChessUnits.h"
#include "../Board.h"
#include "../pieces/Piece.h"

#include <string>

namespace ChessbotUtilities {

    // Hashing

    const long long h_piece[1536] = { 4088671061038001551LL, 1169968705659483644LL, 6691773311795958095LL, 3370076529603801200LL, 840552400572720040LL, 2578899677553044477LL, 5753853655191555779LL, 6762508788116043157LL, 3880641194695890883LL, 6634404370730989814LL, 4298882804625176504LL, 5553938010195688928LL, 1301947136822277173LL, 911966221469740795LL, 314782198324413313LL, 5383776973585736871LL, 1332198762611559412LL, 847148627813476169LL, 3349421377400804229LL, 1101214355894487826LL, 1673260924283702970LL, 5795079722529988962LL, 6095749900598656938LL, 150863974133619538LL, 4868718659957080510LL, 5289129193753598456LL, 106772148922069441LL, 6843031038127903175LL, 5615687360804683840LL, 4586858928102058068LL, 720017227325575907LL, 4044834618420744154LL, 6222986614447486307LL, 2058501403296532829LL, 1670004859479363363LL, 3437659431212615967LL, 3586827050598502594LL, 5820390160716909486LL, 7060214938864322172LL, 1469293404352083346LL, 4355745277201616257LL, 815803313041301538LL, 922504445806116923LL, 857457023992655368LL, 6544741262676203272LL, 1935597536450560575LL, 4840249081645507957LL, 6163193422068986439LL, 1102476649396251602LL, 525055853977649730LL, 3275316614963546971LL, 7791446614755157462LL, 2020532218507554978LL, 4125829658140760635LL, 5010457481362100281LL, 5756840433419871438LL, 724714710410705926LL, 1391602986649908287LL, 1146883791155578039LL, 5460014373792587784LL, 3525807010805150389LL, 6007317099841692576LL, 229479305022755946LL, 4938434453073140393LL, 5092990695224007872LL, 2211757131917200538LL, 2475510538376038367LL, 1227776657885410232LL, 221770471573546219LL, 5442940014386500635LL, 6754891886644835679LL, 2483037404916620191LL, 7395938807640924918LL, 5556148922293113903LL, 689091676809002236LL, 2127934945734186215LL, 3601944800104084866LL, 159236220838243611LL, 207193147196835870LL, 480287853815583193LL, 3457907300755243038LL, 6701774348880586102LL, 71376502794253190LL, 4471632889473450790LL, 1166175431192822693LL, 1448610240373882540LL, 4941725840078983105LL, 5142397399817677578LL, 5213648647078684701LL, 4524299976633159282LL, 1611072169414830656LL, 6389966188549328794LL, 4442388552688369540LL, 1940085060360864617LL, 6266417545624029826LL, 6626395842069293364LL, 5589827500295777466LL, 3310446858399222827LL, 6341958418533657823LL, 7160163203107291650LL, 7507756392303587086LL, 7042304069397570380LL, 1401115846519958218LL, 2293456509017108827LL, 3047288677199954977LL, 3618759044058767930LL, 6837628180605009983LL, 1628775934286177396LL, 5727139469049404574LL, 4448406926313495024LL, 1813891510914277125LL, 1744703817141170740LL, 455873968503139388LL, 4387767342425366343LL, 1467702744409350464LL, 4959001696717586574LL, 4095160129273449452LL, 2561602562758691408LL, 2030445763338899427LL, 5114154014808891967LL, 2844187400889659401LL, 1163694884713639390LL, 887360430548967190LL, 2440815196868833341LL, 7792032161722184974LL, 4902277386558243713LL, 5843435815511068911LL, 2349479557555398533LL, 784177143784156814LL, 6735711834544330067LL, 3515645511929031263LL, 2887572834845822809LL, 6465982677013451017LL, 1536470627888217679LL, 3958462586383472991LL, 4648043193006693349LL, 4989164101608204531LL, 1290697459136391249LL, 3975434309106152012LL, 3314668875186119470LL, 7322604189909931332LL, 1413125789000359091LL, 6690551172743647213LL, 2678294893993467783LL, 8300908277575166LL, 2320216313686587024LL, 1479343681231687027LL, 4664059204681635587LL, 2408649029781654931LL, 908784665376825859LL, 7300821738890767265LL, 1517627720065913641LL, 487924401264139768LL, 1346354174955889547LL, 2841439440653168729LL, 3801695624916928951LL, 6431381200823419934LL, 7212243826956049330LL, 5891288897525510438LL, 7427560416827355194LL, 2367418478443931165LL, 4666324347533799266LL, 2507601098020512853LL, 553744979871488935LL, 5607501570829470794LL, 6516173507241794259LL, 1654452061493618102LL, 5900843646108636126LL, 6760337963744786270LL, 2953275037799375729LL, 7579352609704500748LL, 2930544478126075226LL, 6863807004664168052LL, 1166334374649902240LL, 1306547381348309794LL, 981024397863016799LL, 2597364972899136909LL, 487371743395617155LL, 2884597448126694779LL, 1207525082131158018LL, 6206290316327189027LL, 13163702505556366LL, 3518595693080549044LL, 3196336840066757677LL, 1711550088006387135LL, 1395455384001654341LL, 1918751782232201134LL, 2809093556029940153LL, 2205236701623576260LL, 2633091167465924375LL, 6689429862378796046LL, 366929935024821179LL, 1711059946673836992LL, 3095468898125852584LL, 3212829794633349217LL, 7500453557011624357LL, 62068169868667663LL, 1099599698552220326LL, 1454200805221241857LL, 2919354658728782250LL, 3742791286319947486LL, 5064954235174592953LL, 3256824411541803076LL, 6346969012495901264LL, 6436101456165905060LL, 3138619032215746362LL, 6148304239188026169LL, 4019765067767559505LL, 4065534442802271510LL, 2890971826921250463LL, 3985476986767462656LL, 2522811232388498609LL, 583755253658630613LL, 6099387587094014820LL, 4055025168728942916LL, 5884062775025018413LL, 6931310725579679718LL, 2030053365715890855LL, 2549185899462448778LL, 7571410299839844144LL, 5484178108599579457LL, 1382859916765692474LL, 6579955021315250517LL, 4710764605953201LL, 7558504176604617762LL, 3062608640016066650LL, 2192945068744664450LL, 568485261840487743LL, 3283179644926465105LL, 4493881229172270079LL, 3791688168523647359LL, 4368794275622228797LL, 2162310564222151519LL, 695051547564569742LL, 2398098243275552227LL, 3474764952769509726LL, 855520145734689132LL, 7760359659622287256LL, 553416980746461767LL, 5430131137738627477LL, 2858678821303071639LL, 4436459863093193831LL, 7010170926073957781LL, 3129448022678423921LL, 1513350842318414392LL, 1492842673341175228LL, 2947915361465250205LL, 920812304152727117LL, 3177927442810285951LL, 5283806543407278385LL, 6493733619218497667LL, 6477142505674582719LL, 1538544741340843483LL, 4355628005032937846LL, 6894188137684580829LL, 6124100489234526135LL, 6659009688071152889LL, 492673639566501661LL, 2753525691037245822LL, 166619968303281473LL, 4835032703356875181LL, 7357244411766782366LL, 2483627925123239366LL, 5318114419115036651LL, 616990999135846040LL, 5047474277807658110LL, 6280038905319811121LL, 6583171953797902042LL, 4690579168404301193LL, 503325177494076593LL, 3682206201889180616LL, 5770169322174306807LL, 2029584618509057738LL, 6832831635123497932LL, 6805352566415269687LL, 2406543671145457901LL, 641412311748302561LL, 3737640158791498437LL, 4037797776315992697LL, 6534666998208020399LL, 2253423751258091202LL, 749569452170420070LL, 2548796298156049595LL, 1986644687872021941LL, 4105731699872889916LL, 3493482753859664000LL, 7353594149514322238LL, 5780351374675414894LL, 7259206135261141744LL, 5699144321009315902LL, 5644814810024402702LL, 3240860820979409351LL, 2901192770368325835LL, 57526388376961029LL, 6155226082684423603LL, 1783991369100226953LL, 5818156781951478017LL, 2842822603126389684LL, 2604536874870348114LL, 2894598030466402665LL, 6249095896599118166LL, 5547254431514254086LL, 7414234440823021576LL, 7805827628503388986LL, 5122685279972444125LL, 7381156254934968806LL, 5272536459421705915LL, 7967809181218140818LL, 796863943968057682LL, 1936214969675377872LL, 4942687146880173081LL, 5848248108809346594LL, 2184369603113879242LL, 562955439155955465LL, 4955427053768820819LL, 4813855322396651403LL, 298554770257702986LL, 4016444996142095067LL, 4959940838507300624LL, 1681583095969900116LL, 5016960690353304843LL, 5958781413994433450LL, 1279154665452561537LL, 7118459629792223674LL, 6493187876391034632LL, 6643529611232033995LL, 1940696982635856576LL, 7408840207194436801LL, 2424278253264034807LL, 2064435502815951618LL, 3409080727521094905LL, 1153611779372167339LL, 1067856195310167793LL, 6823831175737745966LL, 4297943077612007599LL, 5133202527981542531LL, 2029246258788980033LL, 704024805286668825LL, 5311738245797068292LL, 6375273023242430807LL, 6620757874586789917LL, 6784670619905771741LL, 2528335549291890920LL, 5800664999812222950LL, 7534632919227854364LL, 5736962780650036463LL, 6233897470464204717LL, 4134510771279967388LL, 1428597420141297473LL, 7934121077782208469LL, 6001417988169339190LL, 6096612556178592699LL, 6142306634748542513LL, 6148772397162052174LL, 5381077317020152598LL, 2076072397010205765LL, 1788453875175546961LL, 1952523045386598695LL, 7659260598093512198LL, 170220527246423572LL, 7831335862559122280LL, 7085375359104526619LL, 2158142035720593526LL, 4899123376504972982LL, 4714452611164599868LL, 5617911161200656799LL, 3011235675401959848LL, 655092473492019668LL, 744297158448345239LL, 2038013570025317525LL, 845602926049263341LL, 3967216990230085037LL, 719078098950713132LL, 5729236989041807893LL, 4595042378122492364LL, 2516866170844606664LL, 5056539000613144520LL, 7565944598475378848LL, 4045449446018242876LL, 4214111323856582636LL, 4294921883942967463LL, 6277660894247252175LL, 275823182421274865LL, 3657180221386045683LL, 4894048983989269388LL, 2786285996622580912LL, 3130679207711840928LL, 2243445075997162993LL, 2070569209652452442LL, 1695894809858769228LL, 2620353257625428545LL, 329305665966107624LL, 2635795595643594100LL, 2882379110977645236LL, 5702672955727815590LL, 3684109880525923237LL, 7075710331342924122LL, 2955991933377257650LL, 4523821422534744958LL, 2988102471537999483LL, 2522395467940056160LL, 367314100017644927LL, 5113724272517063005LL, 4034095807591345638LL, 2831622789962640441LL, 2077944277722798016LL, 7862917409184415509LL, 7238104261339923396LL, 6876170086259737666LL, 2897630650823711180LL, 47966556782272075LL, 1543662235056531101LL, 3002570946550434593LL, 2367158709521624615LL, 4820538222884438804LL, 7079980979744404289LL, 83307938903654844LL, 5525029557884342504LL, 2503236522472414569LL, 6001693861695944321LL, 6173749666935770162LL, 5651095641375242847LL, 207565106930806392LL, 12409053371109332LL, 4419860767324357481LL, 3007101013228037482LL, 3577831928455246530LL, 4448183458186996385LL, 2289700247091055886LL, 5850740647540673421LL, 1212190986772520107LL, 661564222922902711LL, 3252281782570135831LL, 3512082713256327103LL, 4696631273061527519LL, 3755196346915157319LL, 4964832429564966119LL, 2438332376435979046LL, 6780789673888577887LL, 7559753450391425491LL, 6676499815899528271LL, 5084704187281124268LL, 2636884010307032251LL, 3265982040347543886LL, 5086635662351458625LL, 436756218608328280LL, 5886640452432337649LL, 5583034856906775282LL, 1398099587585726136LL, 6686341296846687585LL, 6762723398962298892LL, 1812722333922991772LL, 2475161810348050464LL, 959540155337742730LL, 6119812653946120394LL, 4889017274025982041LL, 4190410723292595996LL, 4687768803002087271LL, 1415656541720005705LL, 3204535720029758386LL, 6939968454609846000LL, 1081628088873814956LL, 6354967474012287329LL, 3604602416172928423LL, 862783901447362995LL, 7431080066035104087LL, 7835046228523128759LL, 2554636932892104591LL, 7880141255390989246LL, 3691245547382186000LL, 812461738753861798LL, 4154161080398074395LL, 4297730728086291791LL, 4822512868187946676LL, 6955377321296221577LL, 2644383176097912628LL, 5861168422532756861LL, 7266380080782690525LL, 4276972172584066910LL, 2085507084963782346LL, 6455611042816123297LL, 4481599471768209825LL, 5251658177147169425LL, 5261362307827755504LL, 5961129265717649651LL, 5430636865715095664LL, 971375672164087927LL, 2791690433517130161LL, 2310153996746513911LL, 692969103457437019LL, 6536747422802777478LL, 2824115306995306888LL, 1447876119081677899LL, 4202711509238986039LL, 1459319466237525107LL, 941898115766233565LL, 679004895397067964LL, 5031708171460461406LL, 5296076636238638399LL, 482740863096398484LL, 7781256991551807827LL, 5861804768008885790LL, 548934871095523280LL, 3112807229043497812LL, 6844399238883326808LL, 3728419476041781724LL, 1228156231999927058LL, 2841965274952183991LL, 4009420436861716508LL, 434245197800601286LL, 965764935614772334LL, 3079818150398865092LL, 3335871182088602991LL, 2064135503656564627LL, 3583989018600684922LL, 124706547669832373LL, 930402508526133682LL, 5579480486339425672LL, 7657368649674966903LL, 1098056306118197192LL, 2096304882071086225LL, 6412871643235594428LL, 4604406227184832963LL, 2253097909693674294LL, 7225117780879563292LL, 3964351810310046226LL, 1954689326084777020LL, 2800441544062385136LL, 3994625067329219040LL, 3402611730730348224LL, 3198385903856237199LL, 2639574018047201152LL, 4252159343268560351LL, 4323967080695354930LL, 3374545548500110101LL, 2878908736844475099LL, 6660414671698982808LL, 6418406241960300424LL, 6497865714840609043LL, 914790631260336196LL, 7643816365487029925LL, 6028440211620864591LL, 3775522227399306243LL, 5448952928702342884LL, 5228511644264666373LL, 7533449237446139659LL, 34147603388812354LL, 3702630776206998293LL, 7623102400858328076LL, 4246107020397213003LL, 545094457050335461LL, 880242335380938509LL, 1051018639435537570LL, 5973716799963393976LL, 7977095693972022347LL, 3245839588698211778LL, 994593281399060950LL, 2760436905133188521LL, 4654133330766921229LL, 3700856052444164106LL, 7136035539714039187LL, 3316678046935782947LL, 5388547727557101098LL, 5096374177051976963LL, 6037669799148177588LL, 2825921041369540979LL, 3424879769602899507LL, 6505129831697805383LL, 267673503220386538LL, 2614324023638220859LL, 2370721907640876323LL, 2965712846876008389LL, 884499256676889967LL, 1655223602079928075LL, 1356509707708454140LL, 95701566061706694LL, 1651229977881392006LL, 7094350539406934728LL, 315520657915529863LL, 5596584202562903005LL, 7671206770581381638LL, 4026651591361628094LL, 1082318249480417017LL, 1856268204182549235LL, 3082990291809932983LL, 515611038410975929LL, 335733452970052571LL, 7126866822148779075LL, 2774415439365791987LL, 2692812213610302495LL, 4966662734765225527LL, 4333003344987729911LL, 1378525888825363021LL, 7588860752712719221LL, 1596485527034521542LL, 7709465218343905721LL, 2891406095870258153LL, 3881215692597015081LL, 3408079996803458566LL, 6131398595128812842LL, 981397687338410449LL, 1954853961416463568LL, 1524913641540522097LL, 840884004458535974LL, 612597496066086181LL, 2069749505966611377LL, 3747641862917663911LL, 6167354735872570111LL, 428895304643484609LL, 6452729581834791320LL, 2198730229710190044LL, 6545346497416040301LL, 5660908388785544826LL, 4451993581978395166LL, 61868264225701105LL, 1918218889471678928LL, 2634058109604103269LL, 379098178466015815LL, 2673746495672598393LL, 6451014278520018479LL, 4001121095650315902LL, 3161189005534725379LL, 2106369813742140898LL, 6665414326438555252LL, 2576999142246423177LL, 3722291029035731576LL, 6627518257127986335LL, 5176228362931844190LL, 2340468821942317373LL, 1369541613517039786LL, 2848291347995808911LL, 4409911507132965559LL, 7371018770349478213LL, 347188507708165296LL, 6185764483869427374LL, 2388193961986723192LL, 6012167263040793751LL, 2136637702288396921LL, 7897758862846696171LL, 6562436656962159821LL, 5272275404381503600LL, 4015933312288250836LL, 7456075944613562613LL, 1089497802801633632LL, 5112843913002621297LL, 3777531762880415845LL, 5428265675894441781LL, 2272435494434546082LL, 831316853344079923LL, 7397450581679594661LL, 5059455978818591885LL, 97255003636520216LL, 7395619112756108496LL, 5711681557681995648LL, 5232460032844098536LL, 1513008398013143134LL, 3405547892350089077LL, 2427708163872133322LL, 6157059965576884976LL, 2954980399662063318LL, 1237133446158210227LL, 2724384442961978472LL, 3195449684439665392LL, 6707954915640408784LL, 5845358958641527864LL, 3760945721572477571LL, 4736984606416944900LL, 7255727953350638588LL, 1579530955037409972LL, 6107497368095677298LL, 46590275320773220LL, 3334633121921604610LL, 5019541473364838495LL, 1299557964538406354LL, 2387313415828353443LL, 800840969456732663LL, 2790021798084127010LL, 5722689681204731449LL, 6857220107175224729LL, 1801000811528095525LL, 1135293942236949521LL, 6198163059816536325LL, 3774243216860955415LL, 190336476853857541LL, 2143260924303112502LL, 5377288655120638591LL, 1532180681238806382LL, 4139206539000843439LL, 1007311345278221438LL, 7141837586229766502LL, 825335314607279264LL, 1159345947976871769LL, 5949923119050403000LL, 2148632539125306968LL, 4130496732748513737LL, 1782627196616793542LL, 1079705575191303016LL, 2093665895065913649LL, 5882883534052999612LL, 5695430925756914088LL, 801427079603674321LL, 6776831027409810363LL, 7762566576031194031LL, 1890850801644397025LL, 3468859942057055891LL, 4718973281706791870LL, 7018617444681330061LL, 6732503882217732034LL, 3295938976977573427LL, 1151414539883028274LL, 1183303360377348110LL, 3168834006148684987LL, 4745663259677420711LL, 7939936167390717736LL, 7860902475477389279LL, 5691301165833678752LL, 3676443901599303731LL, 671249035291422015LL, 2030618851426420534LL, 2555902329442322LL, 5696835551837254274LL, 4172626949082667089LL, 6681152594159600130LL, 6132712047347864335LL, 2249407734457144202LL, 872198245288271211LL, 2410559191377947626LL, 6182480556407515007LL, 278342142034913014LL, 2297598444421729834LL, 907107772819737683LL, 1102383788915477731LL, 4570743537765120740LL, 4156535916658849179LL, 1183541949222940305LL, 4872562146557520637LL, 4011845488033202921LL, 5034540457746523245LL, 6176420710730561856LL, 2738078222278889396LL, 941372189305503363LL, 3443020599046125010LL, 5956961358224235888LL, 7596151926214843965LL, 5440564983268255292LL, 6755573200051758234LL, 6529387421629170592LL, 2586631127007500484LL, 4496015677296296730LL, 5426333755901051567LL, 3840865981840226679LL, 250060658118131450LL, 3515370157991757599LL, 1994627053160316080LL, 5777484939351462886LL, 571354152079427109LL, 5703698313408582686LL, 5294807536743471858LL, 2859455730316741137LL, 1694680127744840309LL, 7475219251478704521LL, 5644406419455864218LL, 3135930215963241599LL, 3306632237100451017LL, 828011541299495760LL, 444446708012732764LL, 2013651489443841704LL, 4154720721730956187LL, 4445385874441649751LL, 5376612680440287864LL, 5329909840817440058LL, 7571027146960117037LL, 3640458266607212511LL, 3802811860125578510LL, 4091486243273127150LL, 2682892252481196316LL, 1470435134722266240LL, 6654173312969830691LL, 4412979875027856529LL, 6628960855758876107LL, 4943223423898603126LL, 7113843697940939008LL, 1142149260105056441LL, 231859237249888056LL, 1631706881701428794LL, 4087407173041600649LL, 2714889274469734240LL, 5398809465089405495LL, 3597375737845441366LL, 3774644152153948480LL, 4948732498580599278LL, 3565740327161476479LL, 3319141757569297562LL, 517563853720982303LL, 4394622450722596714LL, 470434333535268772LL, 5187860996292346385LL, 4130907061234488245LL, 1990244221998908188LL, 3547547539882784428LL, 6365160974444503469LL, 4330472915057315843LL, 7413589558606160125LL, 1962111892012419413LL, 1028233723551571121LL, 1482082836544901676LL, 6879830096095864992LL, 7045813485585058874LL, 6842999446939704278LL, 4202853266358067703LL, 922885130757533398LL, 1057446030053190503LL, 3042755691081110952LL, 7607078933803455927LL, 1564379436218411060LL, 4819678680388949715LL, 5689046574797953538LL, 2019589744260609758LL, 6552508093059555522LL, 5075016335456323919LL, 1672932587126987705LL, 886164172553744360LL, 4380446495851042440LL, 5264998911299327444LL, 326314856867480067LL, 7979899578880769675LL, 4948352760181011316LL, 1330433221613696943LL, 5701309427761400636LL, 6279971214152610055LL, 637775463031620732LL, 4021425794368720655LL, 2365177278792982853LL, 5689215929884694440LL, 703342727688736725LL, 136701827340832148LL, 7913979856608417340LL, 4752630089757658609LL, 6277355323015687227LL, 603570772963058469LL, 3386379888619738788LL, 795563960625437760LL, 901747760808434115LL, 5334242992698086882LL, 878605886369744874LL, 6789837036329013172LL, 6122525478256382077LL, 664160301164308444LL, 1459834340561294056LL, 3299004770044413666LL, 6904063368446927566LL, 4182664451328604403LL, 7188721657376348945LL, 6046362068747753035LL, 5953113324916865633LL, 2136459824241385LL, 3665774009549361306LL, 3342773475757721546LL, 7485933164908350156LL, 6635774565134596607LL, 4673208245713990344LL, 6289246147690115070LL, 4193625662975372427LL, 3316944918989248834LL, 3631851312762635507LL, 3423706640471709798LL, 5760516521046488801LL, 4489035231247930506LL, 7484566349285732079LL, 897947688122293668LL, 5969402403618331567LL, 5092503134264517943LL, 5606558315047233979LL, 2659564223055769496LL, 2784543754792724272LL, 3244675739329620680LL, 5163299492736333319LL, 4602673572553760984LL, 1445468021044260908LL, 3208971714700679551LL, 1436578592603870623LL, 2890382832047896678LL, 790313058503909264LL, 5302677209038798414LL, 507855254354104236LL, 1927155951508094454LL, 469617064234695397LL, 5785872499654873010LL, 3694651256474270830LL, 2010165351394416109LL, 941250891728499037LL, 6787422436004008521LL, 6889005807517224927LL, 2891712336930914477LL, 1688998545538522819LL, 6982213801633018703LL, 1317052051024469401LL, 3752911390882213565LL, 5039910337927478406LL, 4741128403443213970LL, 4492848813051676514LL, 6071871029673989199LL, 4914894242292252409LL, 483947079527903335LL, 7189660591428796303LL, 5798597737307913955LL, 3614590415162986099LL, 4038055687873265854LL, 3739095935282789456LL, 3021872422855345776LL, 3805141311043274303LL, 3133846370746004981LL, 6587956988865640295LL, 3875545539150267725LL, 3287974761514453534LL, 4582651420247041206LL, 686682076401095192LL, 6365110532228168498LL, 4304509058300463536LL, 4794759090391292940LL, 1428483418013301590LL, 6648639557022729799LL, 3057987033387750768LL, 2994067068609719895LL, 3258975232620650632LL, 3382644156485296576LL, 1393635357445431918LL, 3412541498683664312LL, 981069020829128622LL, 7937845128066983245LL, 6202649386160458183LL, 508518503180591693LL, 5853944436084636570LL, 4485638626508342140LL, 112839682271523306LL, 6973957362023846470LL, 4400135257951557397LL, 4411717559194054374LL, 1802908332762290584LL, 1079034558980357012LL, 1017566031521528959LL, 2056945050483427489LL, 7426299475239100553LL, 2983046688222529039LL, 5161532024944844442LL, 4126761501216231786LL, 5885310012569726312LL, 5625237963681400824LL, 705361826491274058LL, 6304178553572593460LL, 2740410637324346740LL, 6878823824978246556LL, 3800281357668478341LL, 2480325077562512487LL, 7629117463146514602LL, 1988711956208695164LL, 3280524716994341535LL, 2954129622403570632LL, 1230501329599856225LL, 7735831679088089791LL, 1961542529472707839LL, 5873231054780338346LL, 7196308502163913909LL, 5867610517137489294LL, 6756904135714590150LL, 4774896952588191872LL, 7061248812339009449LL, 1205988932095526205LL, 5923901145127958815LL, 6311863874978719100LL, 3466961660068903229LL, 6349285776940368086LL, 3891821806998262847LL, 4822195817579460261LL, 4128669723468600417LL, 2581677583692221359LL, 1844093462267088770LL, 4628890240390007245LL, 5061647753938589117LL, 5732756356255431129LL, 997359595517598256LL, 3532010183256706690LL, 1515509039562156320LL, 107973650617272808LL, 3203546896777642123LL, 6464986100950608286LL, 4631829770411568666LL, 2147119690093508344LL, 3433408443562378660LL, 5240474671375900262LL, 3591938612797517744LL, 6209603137001766740LL, 7503456141237853728LL, 6167883203306854313LL, 1849687813189413075LL, 6500228566719227484LL, 6786053075550720935LL, 559467324440667180LL, 3892819973235332913LL, 1867161690338480904LL, 1125085063702033680LL, 3073097194186436830LL, 2282944668214549656LL, 2737869850441768879LL, 1124980156039834621LL, 784544795295612792LL, 1568586315439941132LL, 3456661403055132655LL, 6342387530189102245LL, 7572624977906602161LL, 3300524738123002932LL, 7112052131909439761LL, 3987908854130764023LL, 6702045042874207492LL, 2578459196809969543LL, 3403249105642032714LL, 480664783059791113LL, 7362508624448225314LL, 3334573765286952479LL, 6546234296994719642LL, 2707669284440593245LL, 2634981610104412907LL, 4501897540817054812LL, 1470781106179393331LL, 1987221997055004428LL, 2309140219695866666LL, 4525849770286991406LL, 1213962818783685245LL, 7136090239752610055LL, 6338130793155302145LL, 4539240920488720987LL, 2889071973885829705LL, 1904236998115427996LL, 1276465967901893099LL, 649986407657307493LL, 7591285124928473834LL, 514629202823885874LL, 1529290915921189892LL, 7655087567440055141LL, 7454487313394333329LL, 7981781086871057580LL, 600396062889820826LL, 7544449606540956925LL, 7350151287793863754LL, 3552949007708091163LL, 7851035422749564258LL, 5542626680163796438LL, 4792057118337302902LL, 6037173487070355919LL, 2560187852477418587LL, 3445577764153261607LL, 7079720788210118330LL, 1959692929871389066LL, 910010445494885184LL, 5661131589585079746LL, 7803495910673113755LL, 511990836655318417LL, 557330153061947350LL, 1078254403561923539LL, 2182115943973572558LL, 1973305298505617274LL, 6824835641116529244LL, 5645893315824278839LL, 3454281099279315022LL, 1650983429208073987LL, 5549368488517926895LL, 5167046534769562134LL, 3514281944492050032LL, 2176158731666327487LL, 2660600100226524652LL, 7786812663859159449LL, 3240087496324395939LL, 688405301114369686LL, 5015221106635834353LL, 5584329464945019904LL, 2134898116779217656LL, 6101196169090095746LL, 251206605711853715LL, 314751005550039243LL, 7583122001917415420LL, 7798868499626707497LL, 1796755034279153913LL, 4624920170149884333LL, 4127563144300599790LL, 3408197918411586188LL, 4532674880605664848LL, 5269685401920575518LL, 3382315986069537458LL, 3627293477361956179LL, 1766171573271582245LL, 4528055951308427406LL, 7058247465271539423LL, 1759001416568340861LL, 743566849916381420LL, 24675831626677833LL, 5806807512806230305LL, 2073213997104102620LL, 6339741773853944469LL, 3742952716751140157LL, 4558362711913411202LL, 1030529234593966122LL, 6932972953652426572LL, 1102215609863024002LL, 5363514192283839406LL, 1909538529725868898LL, 1266903703370820554LL, 7372047284528382207LL, 2918610589508928454LL, 7669683550394942431LL, 5535352871195050425LL, 2978184731924509041LL, 826146091661253799LL, 7859990422550160650LL, 5443948450111346809LL, 4505727958412080838LL, 2203784961844077125LL, 1802981632783512595LL, 4784761379296033490LL, 3437329290748756597LL, 2368873450567452055LL, 3285639576886221993LL, 1105060618797210451LL, 6646215832437171395LL, 5485354511967394716LL, 4159872798730599302LL, 2191025263568301197LL, 5458257941421416587LL, 4693415976753115995LL, 3104012728543983739LL, 389183379555755168LL, 3000401375937700796LL, 973131954782306835LL, 5989003519340537173LL, 1432168027867085260LL, 6393110667551702235LL, 2251606207231226161LL, 7635831093417006510LL, 3453750058646591860LL, 4942573462225657709LL, 1683728787638142173LL, 671847868507504636LL, 4663261413826979915LL, 7446687858736039904LL, 3484434439642579106LL, 116327313827186451LL, 5496039716907765121LL, 3499300966897468035LL, 2259163164386875059LL, 3004599264615239068LL, 239694778278531068LL, 523196512578877747LL, 6243616645977354144LL, 3135296373162707223LL, 2718026429690879320LL, 3838621747358432984LL, 2527664235867175150LL, 3507659086722065278LL, 4024166209519277660LL, 420092180790314985LL, 1466485414349239965LL, 3632196635445441138LL, 5196785744938513277LL, 2640065071107306009LL, 115094425465236344LL, 7854862529154703723LL, 7358967233019860105LL, 160993513424288887LL, 7517802722321392421LL, 2613015933521042508LL, 1801337588049665810LL, 6147397494028723435LL, 2883351109927831094LL, 4723603425256684249LL, 4279802545586818076LL, 6296340827190167012LL, 6152883040506874363LL, 341626965424650938LL, 1999646026499211602LL, 6001609769313804029LL, 3851185933599854241LL, 1815630411704254429LL, 3194642944396807186LL, 4220518340863361863LL, 7798941723935328822LL, 5185070883865666401LL, 6743540559054629533LL, 1493485411787844297LL, 1355258924047540089LL, 4290509397666253655LL, 5405795374470839283LL, 4930859392800988027LL, 2298319227794225480LL, 6854150870002635160LL, 2073645560655415184LL, 2743525883571624648LL, 7854248600786112596LL, 3868903144824237735LL, 604004516113519921LL, 2129774853849598622LL, 1072222939501323540LL, 3993008882575686441LL, 248430582843260773LL, 4369983374745062793LL, 3265800658812175292LL, 1356521779249230334LL, 2535444083574585303LL, 1634416650320479411LL, 4219039814176594563LL, 6576576680923958711LL, 406862173912043433LL, 1035675773154277382LL, 4043626550217683380LL, 663339164337650463LL, 4812462821630548940LL, 2033990641579798181LL, 4882474314533245703LL, 7225759926973458820LL, 5076908702525625128LL, 5067059019012015888LL, 2212568210443903083LL, 4479707347550019916LL, 283645861738501543LL, 3755298962551599135LL, 951625866246445855LL, 3385349454843876645LL, 7087608208231844137LL, 3431897183900495421LL, 6830208342002738150LL, 2547165331529836457LL, 7996575407806605153LL, 7247724546223359243LL, 2029251989286508399LL, 1815392106805044238LL, 2337042469624439111LL, 1864896735214623073LL, 3906165400510052351LL, 4865420220873234500LL, 4115301809772302038LL, 1466316405888420029LL, 6443964968989590905LL, 5458576480537237990LL, 4148467505239073985LL, 7848355253739058998LL, 4587455850587832655LL, 479629059655240287LL, 561847269854835880LL, 5925825883698265238LL, 5570516611055521050LL, 1941097202420083966LL, 6207541395595374343LL, 6237564925956150379LL, 2187000881090046687LL, 6050848856760443130LL, 3157270257583270149LL, 5985433806091828418LL, 5021518654935070769LL, 50893175560047570LL, 4993469528009541800LL, 586832780425644125LL, 363257616223004327LL, 6509016887888384718LL, 3786067479330302260LL, 3056529920230891294LL, 2207350816596304410LL, 7309223624026565568LL, 7338207954665761276LL, 1683512475887132199LL, 431964603080372928LL, 1619680521646828335LL, 1339155892196726646LL, 6388807783485573991LL, 7212893604545126968LL, 7546734126731932221LL, 1906235111326890690LL, 5573529153719664326LL, 7210324577541462807LL, 800236418424978827LL, 1393437422064398059LL, 2117225861123420667LL, 6431992528892218517LL, 1978102085995577141LL, 4697206947511022142LL, 7000083698512221832LL, 4955374526283044353LL, 5131015183947978685LL, 7555712273860749141LL, 5268317456307891150LL, 6158501155227939913LL, 2909432598235642627LL, 2504064774736363430LL, 5921462265257925352LL, 2258642014284755870LL, 5201106300804567779LL, 1857272001425315620LL, 5191732906080905462LL, 1505232073981855634LL, 7346616055891228887LL, 3748632487684538449LL, 7761024568208062937LL, 4794289254361485551LL, 4298934793195228394LL, 4369124648826810017LL, 2286619668148207368LL, 1670137517689071277LL, 7956020304547645788LL, 4340980185852310535LL, 7740557662656265613LL, 7918453524563708027LL, 7190800372582849019LL, 5525506385026310818LL, 6874864744934144999LL, 2688448272641758178LL, 4804825064736008807LL, 3634935022501720382LL, 5278585122703577359LL, 1057321410335239915LL, 4050627560055338389LL, 2340444520903555530LL, 5715404747513908775LL, 6232325293811933244LL, 191962888070400638LL, 5622421519749035155LL, 2433145032308948003LL, 6165955795266493045LL, 4101178783177512349LL, 5104518250083660463LL, 356788065055309662LL, 6848556068314716374LL, 5126880915776869337LL, 5252982909320097809LL, 3226336155846577850LL, 7252039448151853810LL, 437415061414802236LL, 439950329673520255LL, 1099815564405996029LL, 6602957449821631667LL, 5088625347034002971LL, 6240275037209154385LL, 2003991752621034704LL, 1243128310340511389LL, 3542928007489572795LL, 2464383739266438978LL, 7488256594167292372LL, 4759477472009760050LL, 4604949722023894037LL, 844179671805721581LL, 2547164037589002464LL, 7208915448575770280LL, 6842281492438708406LL, 4317560808336243454LL, 3551042502488845156LL, 6084561368169127775LL, 443089487857983155LL, 4624839487761178380LL, 117625439582193051LL, 1054508445170547043LL, 2544310728849257932LL, 6152059563730259481LL, 4814047100284343785LL, 1698154490172851426LL, 7074454854380241339LL, 7017092382898918766LL, 3659913332774968597LL, 3889929417495716970LL, 3267998525504959635LL, 2383372145598489039LL, 3467764451748368110LL, 3860816546777054458LL, 562868894013057692LL, 7094301057267538367LL, 3051531020157276027LL, 2134333699274910214LL, 6634724177261215037LL, 5909909439155446581LL, 380755709694550952LL, 7844680377013561048LL, 3014186302782848553LL, 3649258807053330550LL, 907846233717572770LL, 5828320735927032689LL, 3648026937198353946LL, 2255799317154927263LL, 7196945677348025224LL, 420358645400361949LL, 7354589668820927687LL, 5925744589685699593LL, 3109950210461957545LL, 4917775021936689357LL, 3874057657434417232LL, 398277544081234097LL, 7014147735464031123LL, 786696149412661568LL, 4060263004921096733LL, 3210107677684697429LL, 2523249625445241530LL, 1144275057574188079LL, 4281235888131561595LL, 7837628088567957827LL, 6257188156495098572LL, 7124660847236499786LL, 889934113477797131LL, 1588138420176460664LL, 4467988115481505322LL, 6401312317121234775LL, 5043706678514854027LL, 2642865582624562395LL, 7401654317667192269LL, 2009335622525423828LL, 3823078825495434394LL, 7940471793104563517LL, 7438709973702016042LL, 3619747041551208107LL, 4739790054090379209LL, 4312978156535741209LL, 955650026324316318LL, 362109926968463892LL, 5559819551210411503LL, 6732526671975800076LL, 4970619469605792809LL, 7675519642769580479LL, 1591761430015340411LL, 5990214848733638108LL, 2543841187534355124LL, 4085724394213463834LL, 6821247603006414871LL, 3419572926542812161LL, 3288428369625060215LL, 301053451499191982LL, 2203600085513400089LL, 276657377767050414LL, 3736709025632721482LL, 926833094639412735LL, 3945509335305413864LL, 2736338508380442105LL, 4856092650044167496LL, 4405013110839718963LL, 7071433500594790384LL, 5345827296085380155LL, 2610066421591365759LL, 5429494508717955548LL, 4494993501146332744LL, 1766033367076031222LL, 4205255394821571426LL, 7824704801819998212LL, 520798782102348489LL, 1908380838489472505LL, 1664938878562514983LL, 3459151502321253540LL, 1308420579436830870LL, 4833045867917746303LL, 7349482135624494764LL, 7803416184936324273LL, 3197102734734416171LL, 177151027231649682LL, 1579612125075096340LL, 67305786171929998LL, 274976207465721685LL, 2450636654746761272LL, 2409504080468029478LL, 2712572488195964677LL, 371198133610342581LL, 7506435687240955689LL, 7133915972846135473LL, 901510051308281274LL, 969626673726131905LL, 6313396545980474967LL, 4682066991085212080LL, 2675310949229952035LL, 7242992902632731325LL, 246774048515747273LL, 6249507649036808538LL, 2349722164072002543LL, 3886388403060538288LL, 7208301686797330217LL, 7060604749373998737LL, 5335991332880919991LL, 4875914403339867175LL, 638952795089713797LL, 2065277783318781685LL, 4265382585058563992LL, 1239426731924284238LL, 3841413176918498802LL, 6414415575184233966LL, 722498447632484860LL, 4458957074093842756LL, 3385267445807894803LL, 6507942696881245525LL, 5141453547521050345LL, 4142401183779698858LL, 5852955808575222464LL, 6230485326238316490LL, 264764016592586612LL, 587538710471593186LL, 2465030341747362532LL, 7924344948477381503LL, 5173257184710724301LL, 4354873040936752948LL, 2511239856761664535LL, 5117015889232796485LL, 7017086560702869959LL, 3160529170232839997LL, 5637813707401175958LL, 4563179004011278362LL, 1278579722707402532LL, 3079102445780836204LL, 6628618331622721833LL, 2028219846473426035LL, 2087876942743996535LL, 6175854841790862547LL, 1724126877400486576LL, 1929017191853128964LL, 3306989912082206083LL, 1623145916799818181LL, 1886690918438807626LL, 5348918441429058551LL, 6304185455607373211LL, 7542122687405383335LL, 5048042104565255481LL, 7083228903950926532LL, 4052317959334711628LL, 5150367359825138530LL, 7020351115265715399LL, 7314785957924520026LL, 7409691414786573822LL, 4081391027729672584LL, 5688564954255792267LL, 2608264850345866104LL, 2837298766568754117LL, 4262878899671510790LL, 4232659512132298627LL, 5017842857967827074LL, 2863100333222986256LL, 1637829223062928573LL, 1461293009165758891LL, 6548605164320899725LL, 2789102212751804807LL };
    const long long h_doublewalk[2] = { 3570850897759781438LL, 3416157049455217017LL };
    const long long h_color[2] = { 235241960162683580LL, 612065253508538646LL };

    inline long long HashPiece(const Piece* piece) {
        // type, color, position, hasMoved (only for king and rook)
        PIECE_TYPE type = piece->GetType();
        int t = (int)piece->GetType(); // 6
        int c = (int)piece->GetColor(); // 2
        int i = (int)piece->GetPosition().i; // 8
        int j = (int)piece->GetPosition().j; // 8
        int h = (type == KING || type == ROOK) ? (int)piece->HasMoved() : 0; // 2
        int n = t + 6 * ( c + 2 * ( i + 8 * ( j + 8 * ( h ) ) ) );
        return h_piece[n];
    }

    inline long long HashBoard(const Board &board, const CHESS_COLOR color) {
        // pieces ^ [is last move a double walk], for enpassant
        long long res = 0;
        for (const Piece* piece : board.GetPieces()) {
            res ^= HashPiece(piece);
        }
        bool dw = board.GetLastMove() != std::nullopt && board.GetLastMove().value().type == DOUBLE_WALK;
        res ^= h_doublewalk[dw];
        res ^= color == CHESS_WHITE ? h_color[0] : h_color[1];
        return res;
    }

    // Heuristic evaluation

    const int pawnValue = 100;
    const int knightValue = 300;
    const int bishopValue = 320;
    const int rookValue = 500;
    const int queenValue = 900;
    const float endgameMaterialStart = rookValue * 2 + bishopValue + knightValue;
    
    const int pawnPositionalValue[64] = {
        0,  0,  0,  0,  0,  0,  0,  0,
        50, 50, 50, 50, 50, 50, 50, 50,
        10, 10, 20, 30, 30, 20, 10, 10,
        5,  5, 10, 25, 25, 10,  5,  5,
        0,  0,  0, 20, 20,  0,  0,  0,
        5, -5,-10,  0,  0,-10, -5,  5,
        5, 10, 10,-20,-20, 10, 10,  5,
        0,  0,  0,  0,  0,  0,  0,  0
    };
    const int knightPositionalValue[64] = {
        -50,-40,-30,-30,-30,-30,-40,-50,
        -40,-20,  0,  0,  0,  0,-20,-40,
        -30,  0, 10, 15, 15, 10,  0,-30,
        -30,  5, 15, 20, 20, 15,  5,-30,
        -30,  0, 15, 20, 20, 15,  0,-30,
        -30,  5, 10, 15, 15, 10,  5,-30,
        -40,-20,  0,  5,  5,  0,-20,-40,
        -50,-40,-30,-30,-30,-30,-40,-50
    };
    const int bishopPositionalValue[64] = {
        -20,-10,-10,-10,-10,-10,-10,-20,
        -10,  0,  0,  0,  0,  0,  0,-10,
        -10,  0,  5, 10, 10,  5,  0,-10,
        -10,  5,  5, 10, 10,  5,  5,-10,
        -10,  0, 10, 10, 10, 10,  0,-10,
        -10, 10, 10, 10, 10, 10, 10,-10,
        -10,  5,  0,  0,  0,  0,  5,-10,
        -20,-10,-10,-10,-10,-10,-10,-20
    };
    const int rookPositionalValue[64] = {
        0,  0,  0,  0,  0,  0,  0,  0,
        5, 10, 10, 10, 10, 10, 10,  5,
        -5,  0,  0,  0,  0,  0,  0, -5,
        -5,  0,  0,  0,  0,  0,  0, -5,
        -5,  0,  0,  0,  0,  0,  0, -5,
        -5,  0,  0,  0,  0,  0,  0, -5,
        -5,  0,  0,  0,  0,  0,  0, -5,
        0,  0,  0,  5,  5,  0,  0,  0
    };
    const int queenPositionalValue[64] = {
        -20,-10,-10, -5, -5,-10,-10,-20,
        -10,  0,  0,  0,  0,  0,  0,-10,
        -10,  0,  5,  5,  5,  5,  0,-10,
        -5,  0,  5,  5,  5,  5,  0, -5,
        0,  0,  5,  5,  5,  5,  0, -5,
        -10,  5,  5,  5,  5,  5,  0,-10,
        -10,  0,  5,  0,  0,  0,  0,-10,
        -20,-10,-10, -5, -5,-10,-10,-20
    };
    const int kingEarlyPositionalValue[64] = {
        -30,-40,-40,-50,-50,-40,-40,-30,
        -30,-40,-40,-50,-50,-40,-40,-30,
        -30,-40,-40,-50,-50,-40,-40,-30,
        -30,-40,-40,-50,-50,-40,-40,-30,
        -20,-30,-30,-40,-40,-30,-30,-20,
        -10,-20,-20,-20,-20,-20,-20,-10,
        20, 20,  0,  0,  0,  0, 20, 20,
        20, 30, 10,  0,  0, 10, 30, 20
    };
    const int kingEndPositionalValue[64] = {
        -50,-40,-30,-20,-20,-30,-40,-50,
        -30,-20,-10,  0,  0,-10,-20,-30,
        -30,-10, 20, 30, 30, 20,-10,-30,
        -30,-10, 30, 40, 40, 30,-10,-30,
        -30,-10, 30, 40, 40, 30,-10,-30,
        -30,-10, 20, 30, 30, 20,-10,-30,
        -30,-30,  0,  0,  0,  0,-30,-30,
        -50,-30,-30,-30,-30,-30,-30,-50
    };

    inline float Evaluate(const Board &board) {
        int materialScore = 0;
        int positionalScoreWithoutKings = 0;

        int whiteKingPositionalEarly;
        int whiteKingPositionalEnd;
        int blackKingPositionalEarly;
        int blackKingPositionalEnd;

        int whiteMaterialScoreWithoutPawns = 0;
        int blackMaterialScoreWithoutPawns = 0;

        for (const Piece* piece : board.GetPieces()) {
            bool isWhite = piece->GetColor() == CHESS_WHITE;
            int sgn = isWhite ? +1 : -1;
            int i = piece->GetPosition().i;
            int j = piece->GetPosition().j;
            if (!isWhite) i = 7 - i;
            int cell = 8 * i + j;

            switch (piece->GetType()) {
                case KING: 
                    if (isWhite) {
                        whiteKingPositionalEarly = kingEarlyPositionalValue[cell];
                        whiteKingPositionalEnd = kingEarlyPositionalValue[cell];
                    } else {
                        blackKingPositionalEarly = kingEarlyPositionalValue[cell];
                        blackKingPositionalEnd = kingEarlyPositionalValue[cell];
                    }
                    break;
                case QUEEN:
                    materialScore += sgn * queenValue;
                    positionalScoreWithoutKings += sgn * queenPositionalValue[cell];

                    if (isWhite) whiteMaterialScoreWithoutPawns += queenValue;
                    else blackMaterialScoreWithoutPawns += queenValue;
                    break;
                case ROOK: 
                    materialScore += sgn * rookValue;
                    positionalScoreWithoutKings += sgn * rookPositionalValue[cell];

                    if (isWhite) whiteMaterialScoreWithoutPawns += rookValue;
                    else blackMaterialScoreWithoutPawns += rookValue;
                    break;
                case BISHOP:
                    materialScore += sgn * bishopValue;
                    positionalScoreWithoutKings += sgn * bishopPositionalValue[cell];

                    if (isWhite) whiteMaterialScoreWithoutPawns += bishopValue;
                    else blackMaterialScoreWithoutPawns += bishopValue;
                    break;
                case KNIGHT:
                    materialScore += sgn * knightValue;
                    positionalScoreWithoutKings += sgn * knightPositionalValue[cell];

                    if (isWhite) whiteMaterialScoreWithoutPawns += knightValue;
                    else blackMaterialScoreWithoutPawns += knightValue;
                    break;
                case PAWN: 
                    materialScore += sgn * pawnValue;
                    positionalScoreWithoutKings += sgn * pawnPositionalValue[cell];

                    break;
            }
        }

        float whiteEndgameWeight = 1.0f - std::min(1.0f, (float)whiteMaterialScoreWithoutPawns / endgameMaterialStart);
        float blackEndgameWeight = 1.0f - std::min(1.0f, (float)blackMaterialScoreWithoutPawns / endgameMaterialStart);

        float positionalScore = positionalScoreWithoutKings;
        positionalScore += whiteKingPositionalEarly * (1 - whiteEndgameWeight) + whiteKingPositionalEnd * whiteEndgameWeight;
        positionalScore -= blackKingPositionalEarly * (1 - blackEndgameWeight) + blackKingPositionalEnd * blackEndgameWeight;

        return materialScore + positionalScore;
    }

    inline std::string GetFEN(const Board &board, CHESS_COLOR color) {
        std::string fen;

        // the first field: board description
        for (int i = 0; i < 8; i++) {
            int blankCount = 0;
            for (int j = 0; j < 8; j++) {
                const Piece* piece = board.GetPieceByPosition(Position{i, j});
                if (piece == nullptr) {
                    blankCount++;
                    continue;
                }
                if (blankCount > 0) {
                    fen.push_back('0' + blankCount);
                    blankCount = 0;
                }
                std::string p = piece->GetTag(); // an uppercase
                if (piece->GetColor() == CHESS_BLACK) p[0] = p[0] - 'A' + 'a';
                fen += p;
            }
            if (blankCount > 0) {
                fen.push_back('0' + blankCount);
                blankCount = 0;
            }
            if (i < 7) fen.push_back('/');
        }

        fen.push_back(' ');

        // second field: whose turn
        if (color == CHESS_WHITE) fen.push_back('w');
        else fen.push_back('b');

        fen.push_back(' ');

        // third field: castling rights
        bool whiteLong = false, whiteShort = false, blackLong = false, blackShort = false;
        for (const Piece* piece : board.GetPieces()) {
            if (piece->GetType() != KING) continue;
            for (Move move : board.GetPossibleMoves(piece)) {
                if (move.type == LONG_CASTLING) {
                    if (piece->GetColor() == CHESS_WHITE) whiteLong = true;
                    else blackLong = true; 
                }
                if (move.type == SHORT_CASTLING) {
                    if (piece->GetColor() == CHESS_WHITE) whiteShort = true;
                    else blackShort = true;
                }
            }
        }
        if (!whiteLong && !whiteShort && !blackLong && !blackShort) fen.push_back('-');
        if (whiteShort) fen.push_back('K');
        if (whiteLong) fen.push_back('Q');
        if (blackShort) fen.push_back('k');
        if (blackLong) fen.push_back('q');

        fen.push_back(' ');
        
        // fourth field: en passant
        if (board.GetLastMove() != std::nullopt && board.GetLastMove().value().type == DOUBLE_WALK) {
            Position pos = board.GetLastMove().value().toPosition;
            if (board.GetPieceByPosition(pos)->GetColor() == CHESS_WHITE) pos.i++;
            else pos.i--;
            fen.push_back('a' + pos.j);
            fen.push_back('8' - pos.i);
        } else {
            fen.push_back('-');
        }

        fen.push_back(' ');

        // fifth field: half move since pawn or capture
        fen.push_back('0');

        fen.push_back(' ');

        // sixth field: number of full moves
        fen.push_back('1');

        return fen;
    }

}

#endif //CHESSBOT_UTILITIES_H